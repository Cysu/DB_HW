我的算法的主要框架是结合了scancount和divideskip，大致如下：

1. 找出查询字符串的所有gram的索引表，设gram个数为N，并依据它们的长度从大到小排序。
2. 要找出在这些列表种出现次数大于等于T的所有index，首先取出最索引表最短的N-L个gram，利用
	1）scancount
	2）mergeskip
   两种算法去寻找出现次数大于等于T-L的index。
3. 在索引表最长的L个gram中，二分查找筛选出来的index，做进一步的筛选。
4. 得到备选的字符串后，每个字符串对应的T值也可能会改变，再利用这个做一次筛选（感谢徐持衡同学
   的讨论和提示）。
5. 最后逐个计算出EditDistance/Jaccard，并确定最终的结果。

通过试验，我认为在给定数据规模下（数据库字符串不超过1000000个），scancount是相对较优的一种
方法，比我实现的利用堆的方法要快很多。

另外，有两个参数非常影响速度，一个是q值，一个是L值。

L值在FZ_indexer.cc的370和446行设置，由于这个参数很难找到一个比较优的值，目前我取的是0，意
味着没有进行二分查找这一步。可以设置为0到T-1的数，比如T/2。
